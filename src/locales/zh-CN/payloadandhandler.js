export default {
  'app.payloadandhandler.lhost_rule': '请输入反向连接的IP地址',
  'app.payloadandhandler.port_rule': '请输入端口',
  'app.payloadandhandler.rhost_rule': '请输入正向连接的IP地址',
  'app.payloadandhandler.alert_1': 'reverse_http类型payload不免杀,建议使用reverse_https类型',
  'app.payloadandhandler.alert_2': 'reverse_tcp及reverse_tcp_rc4类型监听开放到互联网需要打开监听防火墙,抵御互联网测绘平台扫描',
  'app.payloadandhandler.luri_tip': '自定义的URI前缀',
  'app.payloadandhandler.luri_rule': '请输入自定义的URI',
  'app.payloadandhandler.pem_tip': '请选择PEM格式的证书文件,文件内容可以参考<文件列表>中www.example.com.pem,证书文件中需要同时包含公私钥,配置证书后会自动过滤http请求',
  'app.payloadandhandler.pem_label': 'SSL证书',
  'app.payloadandhandler.pem_rule': '请选择证书文件',
  'app.payloadandhandler.comm_tip': '使用选择的Session作为流量转发器,所选择的Session建立本地监听,接收Payload的连接请求,然后将流量转发到Viper',
  'app.payloadandhandler.comm_label': 'Session',
  'app.payloadandhandler.ssl_tip': '是否验证Meterpreter中的SSL证书(只对reverse_winhttps及linux类型https监听有效)',
  'app.payloadandhandler.ssl_label': '验证证书',
  'app.payloadandhandler.ssl_version_tip': '选择监听使用的SSL版本',
  'app.payloadandhandler.ssl_version': 'SSL版本',
  'app.payloadandhandler.sslcipher_tip': 'SSL使用的加密套件(算法)',
  'app.payloadandhandler.sslcipher': 'SSLCipher',
  'app.payloadandhandler.rc4password': 'RC4密码',
  'app.payloadandhandler.rc4password_rule': '请输入RC4密码,建议在8位以上',
  'app.payloadandhandler.domain': 'DOMAIN参数,例如手工指定 aaa.com 的ns服务器为 ns1.bbb.com ns2.bbb.com,则这里输入aaa.com',
  'app.payloadandhandler.domain_rule': '请输入DOMAIN',
  'app.payloadandhandler.req_type_tip': 'DNS数据传输方式,DNSKEY速度快,IPv6适配性强',
  'app.payloadandhandler.req_type_rule': 'DNS数据传输方式,DNSKEY速度快,IPv6适配性强',
  'app.payloadandhandler.DNSKEY': 'DNSKEY (速度快)',
  'app.payloadandhandler.IPv6': 'IPv6 (适配性强)',
  'app.payloadandhandler.SERVER_ID_tip': 'Viper会根据不同的SERVER_ID生成不同的子域名',
  'app.payloadandhandler.SERVER_ID_rule': '请输入SERVER_ID,建议在6位以上',
  'app.payloadandhandler.advance': '高级参数',
  'app.payloadandhandler.advance_second': '特殊参数',
  'app.payloadandhandler.base': '基础参数',
  'app.payloadandhandler.comm': '通信通道',
  'app.payloadandhandler.payload': '载荷',
  'app.payloadandhandler.payload_rule': '请选择有效载荷',
  'app.payloadandhandler.handlername': '别名',
  'app.payloadandhandler.backup': '备份',
  'app.payloadandhandler.handlername_ph': '自定义监听名称',
  'app.payloadandhandler.VIRTUALHANDLER_tip': 'VIPER缓存监听配置,但渗透服务器不会生成正真的监听,此选项用于结合端口转发的反向SHELL/无需监听的payload生成',
  'app.payloadandhandler.VIRTUALHANDLER': '虚拟监听',
  'app.payloadandhandler.auto': '自动化',
  'app.payloadandhandler.AutoRunScript_tip': '权限(Session)初始化完成后自动执行脚本,请注意该参数只有在监听中生效,在载荷中使用不生效',
  'app.payloadandhandler.AutoRunScript': '自动执行脚本',
  'app.payloadandhandler.PrependMigrate': '自动迁移',
  'app.payloadandhandler.PrependMigrate_tip': 'Payload执行后自动迁移到指定进程,请注意 1)必须使用该监听生成的载荷才能生效 2)迁移进程后原进程不会关闭,并且占用loader文件',
  'app.payloadandhandler.PrependMigrateProc': '自动迁移到进程',
  'app.payloadandhandler.AutoUnhookProcess': '自动unhook',
  'app.payloadandhandler.AutoUnhookProcess_tip': '自动加载unhook插件unhook杀软对进程的hook操作',
  'app.payloadandhandler.EXITONSESSION': '自动关闭监听',
  'app.payloadandhandler.EXITONSESSION_tip': '监听生成Session后自动关闭,reverse_http(s)会自动忽略改选项',
  'app.payloadandhandler.diy': '自定义参数',
  'app.payloadandhandler.AutoVerifySessionTimeout': 'Session验证超时时间',
  'app.payloadandhandler.AutoVerifySessionTimeout_tip': '加载初始载荷的超时时间(metsrv.dll和stdapi.dll),如果目标机到viper的网络速度较差,可适当调高该值',
  'app.payloadandhandler.AutoVerifySessionTimeout_ph': '请输入正确的校验超时时间',
  'app.payloadandhandler.SessionCommunicationTimeout': 'Session连接超时时间(秒)',
  'app.payloadandhandler.SessionCommunicationTimeout_ph': '请输入正确的Session连接超时时间',
  'app.payloadandhandler.SessionExpirationTimeout': 'Session过期时间(秒)',
  'app.payloadandhandler.SessionExpirationTimeout_ph': '请输入正确的过期时间',
  'app.payloadandhandler.proxies_proto': '代理配置',
  'app.payloadandhandler.proxies_proto_tip': '正向载荷会通过填写的代理进行连接,反向载荷无法使用代理',
  'app.payloadandhandler.addhandler': '新增监听',
  'app.payloadandhandler.src.bypass.exe': '源码免杀exe',
  'app.payloadandhandler.src.bypass.exe.service': '源码免杀exe(服务)',
  'app.payloadandhandler.separate.bypass.exe': '分离免杀exe',
  'app.payloadandhandler.separate.bypass.dll': '分离免杀dll',
  'app.payloadandhandler.separate.bypass.dll.mutex': '分离免杀dll(mutex)',
  'app.payloadandhandler.src.bypass.elf': '源码免杀elf',
  'app.payloadandhandler.separate.bypass.elf': '分离免杀elf',
  'app.payloadandhandler.format': '载荷类型',
  'app.payloadandhandler.format_rule': '请选择载荷类型',
  'app.payloadandhandler.http_alert': 'reverse_http类型payload不免杀,建议使用reverse_https类型',
  'app.payloadandhandler.ADD_HANDLER': '自动监听',
  'app.payloadandhandler.ADD_HANDLER_tip': '生成载荷同时添加对应的监听(生成的监听无法使用代理,无法设置为永久监听,请手工点击刷新按钮刷新监听列表)',
  'app.payloadandhandler.Iterations': '编码次数',
  'app.payloadandhandler.ForceEncode': '强制编码',
  'app.payloadandhandler.BadChars': '避免字符',
  'app.payloadandhandler.genpayload': '生成载荷',
  'app.payloadandhandler.realhandler': '真实监听',
  'app.payloadandhandler.virlhandler': '虚拟监听',
  'app.payloadandhandler.params': '其他参数',
  'app.payloadandhandler.pemfile': '证书',
  'app.payloadandhandler.proxy': '代理',
  'app.payloadandhandler.getreal': '生成真实监听',
  'app.payloadandhandler.getvirl': '生成虚拟监听',
  'app.payloadandhandler.genpe': '生成PE/ELF',
  'app.payloadandhandler.Detail': '详细参数',
};
